Guide
_________________________________________________

概要
+++++++++++++++++++++++++++++++++++++++++++++++++

AWS Lambdaは、Amazon Web Services（AWS）が提供するサーバーレスコンピューティングサービスである。
ユーザーは、サーバーのプロビジョニングや管理を行わずに、コードを実行できる。
このサービスはイベント駆動型であり、特定のトリガー（イベント）に応じて自動的に関数を実行する。

**ユースケース:**

AWS Lambdaは、以下のようなユースケースに適している。

  * リアルタイムデータ処理: S3やKinesisからのデータをリアルタイムに処理する。
  * APIバックエンド: API Gatewayと組み合わせ、サーバーレスのRESTful APIを構築する。
  * ファイル処理: S3にアップロードされたファイルに対して、自動的に変換や解析を行う。
  * イベント駆動型アプリケーション: DynamoDBやSNSなどのイベントに基づいて、特定の処理を自動化する。



機能
+++++++++++++++++++++++++++++++++++++++++++++++++

.. csv-table::
   :header: "機能", "説明"
   
   "サーバーレスアーキテクチャ", "サーバー管理を不要とし、コードの実行のみを意識する設計を提供。"
   "イベント駆動型実行", "S3、DynamoDB、API Gatewayなどのイベントをトリガーとしてコードを自動実行。"
   "自動スケーリング", "負荷やリクエスト数に応じて、自動的に関数のインスタンス数を調整。"
   "従量課金制", "実行時間とリクエスト数に基づく課金体系で、無駄なコストを削減。"
   "複数言語のサポート", "JavaScript（Node.js）、Python、Java、C#、Go、Rubyなどに対応。"
   "AWSサービスとの統合", "S3、DynamoDB、SNS、SQSなど多くのAWSサービスと連携が容易。"
   "環境変数の設定", "Lambda関数内で使用する設定値やシークレット情報を環境変数として設定可能。"
   "コンテナイメージのサポート", "Dockerコンテナイメージを使用して、最大10GBの関数デプロイが可能。"
   "コンカレンシー制御", "関数の同時実行数を制限することで、リソースの使用を管理。"
   "バージョニングとエイリアス", "関数のバージョン管理が可能で、特定バージョンに名前を付けて呼び出せる。"
   "VPCとの連携", "VPC内のリソースに対して安全にアクセスするためのVPC接続が可能。"
   "モニタリングとロギング", "CloudWatch Logsで関数の実行ログを自動収集し、モニタリングも可能。"
   "デッドレターキュー", "処理に失敗したイベントを保存するためのSQSやSNSのデッドレターキューを設定可能。"
   "プロビジョンドコンカレンシー", "高トラフィック時にも低レイテンシを維持するために関数インスタンスを事前に準備。"
   "カスタムランタイムサポート", "公式にサポートされていない言語もカスタムランタイムで使用可能。"


料金
+++++++++++++++++++++++++++++++++++++++++++++++++



Source
+++++++++++++++++++++++++++++++++++++++++++++++++
https://aws.amazon.com/jp/lambda
